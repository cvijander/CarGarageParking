@model CarGarageParking.ViewModel.IPaginationViewModel<CarGarageParking.Models.Garage>

    
@{
    var searchTerm = ViewData["SearchTerm"]?.ToString();
}
<head>

    <link rel="stylesheet" href="~/css/Pagination.css" />
</head>
    <nav class="Page-navigation">

    @if (Model.HasPrevious)
    {
        <a href="@Url.Action("SearchAGarage","Home", new { page = (Model.CurrentPage-1), search = searchTerm })" class="btn btn-primary">Previous |</a>
    }
    else
    {
        <a class="btn btn-primary disabled">Previous</a>
    }

    <div class="pagination-links">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (Model.CurrentPage == i)
            {
                <a href="@Url.Action("SearchAGarage","Home", new {page = i, search = searchTerm})" class="btn disabled">@i</a>
            }
            else
            {
                <a href="@Url.Action("SearchAGarage","Home", new {page = i, search = searchTerm})" class="btn btn-warning">@i</a>
            }

        }
    </div>
    @if (Model.HasNext)
    {
        <a href="@Url.Action("SearchAGarage","Home", new { page = (Model.CurrentPage+1), search = searchTerm })" class="btn btn-secondary">| Next</a>
    }
    else
    {
        <a class="btn btn-secondary disabled">Next</a>
    }


    

   
    </nav>


<style>
   
</style>