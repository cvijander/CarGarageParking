@model CarGarageParking.Models.PaginationViewModel
    @{
        ViewData["Title"] = "Show all garages";
    }
  
 
    <form asp-action="Index" asp-controller="Garage" method="get">
        <label for="name">Name:</label> 
        <input type="text" id="name" name="name" value="@Context.Request.Query["name"]" />

        <label for="location">Location:</label>
        <input type="text" id="location" name="location" value="@Context.Request.Query["location"]" />

        <label for="maxCapacity">Capacity</label>
        <input type="number" id="maxCapacity" name="maxCapacity" value="@Context.Request.Query["maxCapacity"]" />

        <label for="availableSpots">Available spots</label>
        <input type="number" id="availableSpots"  name="availableSpots" value="@Context.Request.Query["availableSpots"]" />

          <!--   <label for="percent">Procenat popunjenosti</label>-->
        <!--  <input type="number" id="percent" name="percent" value="@Context.Request.Query["percent"]" />-->
        

        <button type="submit" class="btn btn-primary">Submit</button>        
        <a href="@Url.Action("Index","Garage")" class="btn btn-secondary" >Clear</a>
    </form>



    <div class="garage-list">
        @foreach(Garage singleGarage in Model.Garages)
    {
        <div class="garage-solo">
            <hr />
            <h2>Naziv garaze: @singleGarage.Name</h2>
            <h3>Broj slobodnih mesta: @singleGarage.AvailableSpots</h3>
            @{
                decimal OcupancyPercent = ((decimal)singleGarage.CurrentOccupancy / singleGarage.Capacity)*100;
            }

            <h3>Procenat popunjenosti: @OcupancyPercent.ToString("F2") %</h3>           
            <h3>Da li je garaza puna? @(singleGarage.IsFull? "Jeste":"Nije")</h3>
            <a href="@Url.Action("Info","Garage", new {Id = singleGarage.GarageId})">View more info</a>
            <hr />
        </div>
    }

    </div>
     

 @if(Model.HasPrevious)
{
    <a href="@Url.Action("Index","Garage", new { page = (Model.CurrentPage-1).ToString() })" class="btn btn-primary">Previous |</a>
}

@if(Model.HasNext)
{
    <a href="@Url.Action("Index","Garage", new { page = (Model.CurrentPage)+1 })" class="btn btn-secondary">| Next</a>
}

    
    <hr />

@for(int i = 1; i <= Model.TotalPages; i++)
{
    if(Model.CurrentPage == i)
    {
        <a href="@Url.Action("Index","Garage", new {page = i})" class="btn disabled">@i</a>
    }
    else
    {
        <a href="@Url.Action("Index","Garage", new {page = i})" class="btn btn-warning">@i</a>
    }

       
}


   




    <style>

    .garage-solo {
        background-color: burlywood;
        margin:15px;
        padding-left:15px;
    }
        hr{
            color:darkred;

        }
    </style>



