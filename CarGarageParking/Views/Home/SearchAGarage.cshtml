
@model CarGarageParking.ViewModel.IPaginationViewModel<CarGarageParking.Models.Garage>

<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="~/css/GarageResult.css" />
</head>
    @{
        ViewData["Title"] = "Available garages";
    }

    @{
    var isConfirmationPage = ViewData["IsConfirmationPage"] != null && (bool)ViewData["IsConfirmationPage"];
    var currentStep = isConfirmationPage ? 4 : Convert.ToInt32(ViewData["CurrentStep"] ?? 1);
    var totalSteps = 4;
    var progressPercentage = (currentStep * 100 )/totalSteps;
    }


@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}
@if (ViewBag.SuccessMessage != null)
{
    <div class="alert alert-success">@ViewBag.SuccessMessage</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

<h3>Current Time: <span id="currentTime"></span></h3>

@{
    var action = "EnterVehicleDetails";
    var controler = "Home";
}


    <div class="garage-container">
        
        @foreach (Garage garage in Model.Collection)
        {
        @await Html.PartialAsync("_GarageHalfCard", garage, new ViewDataDictionary(ViewData) { { "ShowLink", true } })
        ;
                     
        }
    </div>
   
    <div class="nav-links">
         <a href="@Url.Action("Index","Home")" class="btn btn-danger">Cancel all and go to home page</a>
         <a href="@Url.Action("EnterVehicle","Home")" class="btn btn-warning">Back to search a new garage</a>
    </div>
    

@{
    ViewData["SearchTerm"] = Context.Request.Query["search"].ToString();
}
    <div class="navigation">
    @await Html.PartialAsync("_PaginationViewSearchAGarage", Model )
    </div>

<div class="progress mt-4">
    <div class="progress-bar progress-bar-striped @((progressPercentage == 100 ? "bg-success" : "bg-info"))"
         role="progressbar"
         style="width: @progressPercentage%;"
         aria-valuenow="@progressPercentage"
         aria-valuemin="0"
         aria-valuemax="100">
        Step @currentStep of @totalSteps
    </div>
</div>
<script>
    function updateTime() {
        var now = new Date();
        document.getElementById("currentTime").innerText = now.toLocaleTimeString();
    }

    setInterval(updateTime, 1000); 
    updateTime(); 
</script>